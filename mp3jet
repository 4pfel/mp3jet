#!/usr/bin/perl

# -----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
#<simon.mages@gmail.com> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.         Simon Mages
# -----------------------------------------------------------------------------

use strict;
use warnings;

# if the cups admin is pressing the cancel button on the
# joboverview then the SIGTERM is trigger on the running
# backend, this is the handler for that
#
# the returnvalue 5 is CUPS_BACKEND_CANCEL trigger for
# CUPS, so the job will be chanceld
$SIG{TERM} = sub {
    print STDERR "INFO: stoped playback.\n";
    print STDERR "STATE: -playing\n";
    exit 5;
};

my $PLAYER_STR = "/usr/local/bin/mplayer";
my $PARAMS_STR = "-";
my $PLUGIN_DIR = "";

# to be filled by load_plugins()
my $PLUGIN_BEVORE = "";
my $PLUGIN_AFTER = "";

if (!@ARGV) {
    print 'direct mp3jet "Unknown" "mp3"';
    exit 0;
}

{
    #_read_conf();
    #_load_plugins();
    #_run_pre_plugins();

    open my $audio, "|-", $PLAYER_STR, $PARAMS_STR
	or die "das geht ned!\n";

    print STDERR "INFO: playing: $ARGV[2]\n";
    print STDERR "STATE: +playing\n";
    while (<>) {
	print $audio $_;
    }
    print STDERR "INFO: stoped playback.\n";
    print STDERR "STATE: -playing\n";

    close ($audio);

    #_run_post_plugins();

    exit 0;
}

sub _read_conf {
    # read some values from a config file
    # like $PLAYER_STR and $PARAMS_STR
    return 1;
}

sub _load_plugins {
    return 1;
}

sub _run_pre_plugins {
    return 1;
}

sub _run_post_plugins {
    return 1;
}
